tags:
  - name: users
    description: users API
  - name: generation
    description: Generation API

paths:
  # [GET] users
  /users:
    get:
      tags:
        - users
      summary: Find All Users
      responses:
        200:
          description: 'OK'
        500:
          description: 'Server Error'

    # [POST] users
    post:
      tags:
        - users
      summary: Add User
      parameters:
        - name: body
          in: body
          description: user Data
          required: true
          schema:
            $ref: '#/definitions/users'
      responses:
        201:
          description: 'Created'
        400:
          description: 'Bad Request'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

  # [GET] users/id
  /users/{id}:
    get:
      tags:
        - users
      summary: Find User By Id
      parameters:
        - name: id
          in: path
          description: User Id
          required: true
          type: integer
      responses:
        200:
          description: 'OK'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

    # [PUT] users/id
    put:
      tags:
        - users
      summary: Update User By Id
      parameters:
        - name: id
          in: path
          description: user Id
          required: true
          type: integer
        - name: body
          in: body
          description: user Data
          required: true
          schema:
            $ref: '#/definitions/users'
      responses:
        200:
          description: 'OK'
        400:
          description: 'Bad Request'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

    # [DELETE] users/id
    delete:
      tags:
        - users
      summary: Delete User By Id
      parameters:
        - name: id
          in: path
          description: user Id
          required: true
          type: integer
      responses:
        200:
          description: 'OK'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

  # [POST] generate
  /generate:
    post:
      tags:
        - generation
      summary: Generate content
      parameters:
        - name: body
          in: body
          description: Data for content generation
          required: true
          schema:
            $ref: '#/definitions/GenerateRequest'
      responses:
        200:
          description: Content generated successfully
          schema:
            type: object
            properties:
              data:
                type: object
                description: The generated content data
              message:
                type: string
                example: text_to_image successful
        400:
          description: Invalid action or request data
        500:
          description: Server Error

# definitions
definitions:
  GenerateRequest:
    type: object
    required:
      - action
      - data
    properties:
      action:
        type: string
        example: text_to_image
        description: The action to perform (e.g., text_to_image, text_to_speech)
      data:
        type: object
        properties:
          prompt:
            type: string
            description: The text prompt for image generation
          model:
            type: string
            description: The model to use for generation
          telegram_id:
            type: integer
            description: Telegram ID of the user
          text:
            type: string
            description: The text to convert to speech
          voice_id:
            type: string
            description: The voice ID to use for speech generation

  users:
    type: object
    required:
      - email
      - password
    properties:
      email:
        type: string
        description: user Email
      password:
        type: string
        description: user Password

schemes:
  - https
  - http

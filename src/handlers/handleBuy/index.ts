import { Context } from 'telegraf'
import { starAmounts } from '@/price/helpers'
interface BuyParams {
  ctx: Context
  data: string
  isRu: boolean
}

export async function handleBuy({ ctx, data, isRu }: BuyParams) {
  try {
    for (const amount of starAmounts) {
      if (data.endsWith(`top_up_${amount}`)) {
        await ctx.replyWithInvoice({
          title: `${amount} ‚≠êÔ∏è`,
          description: isRu
            ? `üí¨ –ü–æ–ª—É—á–∏—Ç–µ ${amount} –∑–≤–µ–∑–¥.\n–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∑–≤–µ–∑–¥—ã –¥–ª—è —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π –Ω–∞—à–µ–≥–æ –±–æ—Ç–∞ –∏ –Ω–∞—Å–ª–∞–∂–¥–∞–π—Ç–µ—Å—å –Ω–æ–≤—ã–º–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è–º–∏!`
            : `üí¨ Get ${amount} stars.\nUse stars for various functions of our bot and enjoy new opportunities!`,
          payload: `${amount}_${Date.now()}`,
          currency: 'XTR', // Pass ‚ÄúXTR‚Äù for payments in Telegram Stars.
          prices: [
            {
              label: isRu ? '–¶–µ–Ω–∞' : 'Price',
              amount: amount,
            },
          ],
          provider_token: '',
        })

        return
      }
    }
  } catch (error) {
    console.error('Error in handleBuy:', error)
    throw error
  }
}
